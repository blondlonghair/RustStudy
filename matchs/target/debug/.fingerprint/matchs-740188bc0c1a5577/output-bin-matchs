{"message":"`...` range patterns are deprecated","code":{"code":"E0783","explanation":"The range pattern `...` is no longer allowed.\n\nErroneous code example:\n\n```edition2021,compile_fail,E0783\nmatch 2u8 {\n    0...9 => println!(\"Got a number less than 10\"), // error!\n    _ => println!(\"Got a number 10 or more\"),\n}\n```\n\nOlder Rust code using previous editions allowed `...` to stand for exclusive\nranges which are now signified using `..=`.\n\nTo make this code compile replace the `...` with `..=`.\n\n```edition2021\nmatch 2u8 {\n    0..=9 => println!(\"Got a number less than 10\"), // ok!\n    _ => println!(\"Got a number 10 or more\"),\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6294,"byte_end":6299,"line_start":252,"line_end":252,"column_start":44,"column_end":49,"is_primary":true,"text":[{"text":"        Message::Hello { id: id_variable @ 3...7 } => {","highlight_start":44,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":6295,"byte_end":6298,"line_start":252,"line_end":252,"column_start":45,"column_end":48,"is_primary":true,"text":[{"text":"        Message::Hello { id: id_variable @ 3...7 } => {","highlight_start":45,"highlight_end":48}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0783]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:252:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        Message::Hello { id: id_variable @ 3...7 } => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: use `..=` for an inclusive range\u001b[0m\n\n"}
{"message":"`...` range patterns are deprecated","code":{"code":"E0783","explanation":"The range pattern `...` is no longer allowed.\n\nErroneous code example:\n\n```edition2021,compile_fail,E0783\nmatch 2u8 {\n    0...9 => println!(\"Got a number less than 10\"), // error!\n    _ => println!(\"Got a number 10 or more\"),\n}\n```\n\nOlder Rust code using previous editions allowed `...` to stand for exclusive\nranges which are now signified using `..=`.\n\nTo make this code compile replace the `...` with `..=`.\n\n```edition2021\nmatch 2u8 {\n    0..=9 => println!(\"Got a number less than 10\"), // ok!\n    _ => println!(\"Got a number 10 or more\"),\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\main.rs","byte_start":6409,"byte_end":6416,"line_start":255,"line_end":255,"column_start":30,"column_end":37,"is_primary":true,"text":[{"text":"        Message::Hello { id: 10...12 } => {","highlight_start":30,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `..=` for an inclusive range","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":6411,"byte_end":6414,"line_start":255,"line_end":255,"column_start":32,"column_end":35,"is_primary":true,"text":[{"text":"        Message::Hello { id: 10...12 } => {","highlight_start":32,"highlight_end":35}],"label":null,"suggested_replacement":"..=","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0783]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `...` range patterns are deprecated\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:255:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        Message::Hello { id: 10...12 } => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: use `..=` for an inclusive range\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0783`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0783`.\u001b[0m\n"}
